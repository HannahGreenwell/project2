<script>

  const currentWord = "<%= @game.word.word %>";
  let canvas;
  let canvasApp;

  $(document).ready(function() {

    $('#canvasContainer').append("<canvas id='canvasElement'></canvas>");
    canvas = document.getElementById("canvasElement");
    const ctx = canvas.getContext("2d");

    let offsetX = $('#canvasElement').offset().left;
    let offsetY = $('#canvasElement').offset().top;

    console.log(offsetX)

    // resize canvas when window is resized
    function resizeWindow() {
      ctx.canvas.width = window.innerWidth;
      ctx.canvas.height = window.innerHeight;
      offsetX = $('#canvasElement').offset().left;
      offsetY = $('#canvasElement').offset().top;
    };

    resizeWindow();

    // last known x, y pos
    canvasApp = {
      pos: {
        x: 0,
        y: 0
      },

      setPosition: function(event) {
        this.pos.x = event.pageX - offsetX;
        this.pos.y = event.pageY - offsetY;
      },

      drawOnMove: function(event) {

        if (event.which !== 1) return; //which === 1 when left click down

        ctx.beginPath(); // begin the drawing path

        ctx.lineWidth = 5; // width of line
        ctx.lineCap = "round"; // rounded end cap

        ctx.moveTo(this.pos.x, this.pos.y); // from position
        this.setPosition(event); // set new pos
        ctx.lineTo(this.pos.x, this.pos.y); // to position

        ctx.stroke(); // draw
      },

      // for initial click, draw a circle
      drawOnClick: function(event) {
        ctx.beginPath();
        ctx.arc(this.pos.x, this.pos.y, 0.5, 0, 2*Math.PI); // draws circle
        ctx.fill(); // fill circle
        ctx.stroke();
      }
    }; //canvasApp

    // change canvas to window height/width
    $(window).resize(function() {
      resizeWindow();
    });


    $('#clearButton').on('click', function() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    });


  }); //document ready

</script>
